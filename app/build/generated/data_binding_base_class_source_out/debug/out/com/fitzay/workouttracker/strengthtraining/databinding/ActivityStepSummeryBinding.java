// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStepSummeryBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LineChart chart;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final LinearLayout dateLayout;

  @NonNull
  public final ImageView imgCalories;

  @NonNull
  public final ImageView imgDot;

  @NonNull
  public final ImageView imgLocation;

  @NonNull
  public final ImageView imgStep;

  @NonNull
  public final ImageView imgTime;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final LinearLayout layoutCharts;

  @NonNull
  public final LinearLayout layoutChoice;

  @NonNull
  public final RelativeLayout layoutToday;

  @NonNull
  public final MaterialToolbar materialToolbar;

  @NonNull
  public final CircularProgressIndicator stepProgress;

  @NonNull
  public final TextView txtAverage;

  @NonNull
  public final TextView txtDaily;

  @NonNull
  public final TextView txtMiles;

  @NonNull
  public final TextView txtMonthly;

  @NonNull
  public final TextView txtToolbar;

  @NonNull
  public final TextView txtWeekly;

  @NonNull
  public final TextView typeName;

  @NonNull
  public final TextView userGoal;

  @NonNull
  public final TextView userSteps;

  private ActivityStepSummeryBinding(@NonNull RelativeLayout rootView, @NonNull LineChart chart,
      @NonNull FrameLayout container, @NonNull LinearLayout dateLayout,
      @NonNull ImageView imgCalories, @NonNull ImageView imgDot, @NonNull ImageView imgLocation,
      @NonNull ImageView imgStep, @NonNull ImageView imgTime, @NonNull ImageView ivBack,
      @NonNull LinearLayout layoutCharts, @NonNull LinearLayout layoutChoice,
      @NonNull RelativeLayout layoutToday, @NonNull MaterialToolbar materialToolbar,
      @NonNull CircularProgressIndicator stepProgress, @NonNull TextView txtAverage,
      @NonNull TextView txtDaily, @NonNull TextView txtMiles, @NonNull TextView txtMonthly,
      @NonNull TextView txtToolbar, @NonNull TextView txtWeekly, @NonNull TextView typeName,
      @NonNull TextView userGoal, @NonNull TextView userSteps) {
    this.rootView = rootView;
    this.chart = chart;
    this.container = container;
    this.dateLayout = dateLayout;
    this.imgCalories = imgCalories;
    this.imgDot = imgDot;
    this.imgLocation = imgLocation;
    this.imgStep = imgStep;
    this.imgTime = imgTime;
    this.ivBack = ivBack;
    this.layoutCharts = layoutCharts;
    this.layoutChoice = layoutChoice;
    this.layoutToday = layoutToday;
    this.materialToolbar = materialToolbar;
    this.stepProgress = stepProgress;
    this.txtAverage = txtAverage;
    this.txtDaily = txtDaily;
    this.txtMiles = txtMiles;
    this.txtMonthly = txtMonthly;
    this.txtToolbar = txtToolbar;
    this.txtWeekly = txtWeekly;
    this.typeName = typeName;
    this.userGoal = userGoal;
    this.userSteps = userSteps;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStepSummeryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStepSummeryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_step_summery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStepSummeryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chart;
      LineChart chart = ViewBindings.findChildViewById(rootView, id);
      if (chart == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.dateLayout;
      LinearLayout dateLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateLayout == null) {
        break missingId;
      }

      id = R.id.imgCalories;
      ImageView imgCalories = ViewBindings.findChildViewById(rootView, id);
      if (imgCalories == null) {
        break missingId;
      }

      id = R.id.imgDot;
      ImageView imgDot = ViewBindings.findChildViewById(rootView, id);
      if (imgDot == null) {
        break missingId;
      }

      id = R.id.imgLocation;
      ImageView imgLocation = ViewBindings.findChildViewById(rootView, id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.imgStep;
      ImageView imgStep = ViewBindings.findChildViewById(rootView, id);
      if (imgStep == null) {
        break missingId;
      }

      id = R.id.imgTime;
      ImageView imgTime = ViewBindings.findChildViewById(rootView, id);
      if (imgTime == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.layoutCharts;
      LinearLayout layoutCharts = ViewBindings.findChildViewById(rootView, id);
      if (layoutCharts == null) {
        break missingId;
      }

      id = R.id.layoutChoice;
      LinearLayout layoutChoice = ViewBindings.findChildViewById(rootView, id);
      if (layoutChoice == null) {
        break missingId;
      }

      id = R.id.layoutToday;
      RelativeLayout layoutToday = ViewBindings.findChildViewById(rootView, id);
      if (layoutToday == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      id = R.id.stepProgress;
      CircularProgressIndicator stepProgress = ViewBindings.findChildViewById(rootView, id);
      if (stepProgress == null) {
        break missingId;
      }

      id = R.id.txtAverage;
      TextView txtAverage = ViewBindings.findChildViewById(rootView, id);
      if (txtAverage == null) {
        break missingId;
      }

      id = R.id.txtDaily;
      TextView txtDaily = ViewBindings.findChildViewById(rootView, id);
      if (txtDaily == null) {
        break missingId;
      }

      id = R.id.txtMiles;
      TextView txtMiles = ViewBindings.findChildViewById(rootView, id);
      if (txtMiles == null) {
        break missingId;
      }

      id = R.id.txtMonthly;
      TextView txtMonthly = ViewBindings.findChildViewById(rootView, id);
      if (txtMonthly == null) {
        break missingId;
      }

      id = R.id.txtToolbar;
      TextView txtToolbar = ViewBindings.findChildViewById(rootView, id);
      if (txtToolbar == null) {
        break missingId;
      }

      id = R.id.txtWeekly;
      TextView txtWeekly = ViewBindings.findChildViewById(rootView, id);
      if (txtWeekly == null) {
        break missingId;
      }

      id = R.id.typeName;
      TextView typeName = ViewBindings.findChildViewById(rootView, id);
      if (typeName == null) {
        break missingId;
      }

      id = R.id.userGoal;
      TextView userGoal = ViewBindings.findChildViewById(rootView, id);
      if (userGoal == null) {
        break missingId;
      }

      id = R.id.userSteps;
      TextView userSteps = ViewBindings.findChildViewById(rootView, id);
      if (userSteps == null) {
        break missingId;
      }

      return new ActivityStepSummeryBinding((RelativeLayout) rootView, chart, container, dateLayout,
          imgCalories, imgDot, imgLocation, imgStep, imgTime, ivBack, layoutCharts, layoutChoice,
          layoutToday, materialToolbar, stepProgress, txtAverage, txtDaily, txtMiles, txtMonthly,
          txtToolbar, txtWeekly, typeName, userGoal, userSteps);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
