// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DisplayQuoteLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView authorName;

  @NonNull
  public final TextView catText;

  @NonNull
  public final MaterialButton icCopy;

  @NonNull
  public final MaterialButton icSave;

  @NonNull
  public final MaterialButton icShare;

  @NonNull
  public final LinearLayout layoutBottom;

  @NonNull
  public final RelativeLayout layoutQuote;

  @NonNull
  public final LinearLayout llTop;

  private DisplayQuoteLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView authorName,
      @NonNull TextView catText, @NonNull MaterialButton icCopy, @NonNull MaterialButton icSave,
      @NonNull MaterialButton icShare, @NonNull LinearLayout layoutBottom,
      @NonNull RelativeLayout layoutQuote, @NonNull LinearLayout llTop) {
    this.rootView = rootView;
    this.authorName = authorName;
    this.catText = catText;
    this.icCopy = icCopy;
    this.icSave = icSave;
    this.icShare = icShare;
    this.layoutBottom = layoutBottom;
    this.layoutQuote = layoutQuote;
    this.llTop = llTop;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DisplayQuoteLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DisplayQuoteLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.display_quote_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DisplayQuoteLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authorName;
      TextView authorName = ViewBindings.findChildViewById(rootView, id);
      if (authorName == null) {
        break missingId;
      }

      id = R.id.catText;
      TextView catText = ViewBindings.findChildViewById(rootView, id);
      if (catText == null) {
        break missingId;
      }

      id = R.id.icCopy;
      MaterialButton icCopy = ViewBindings.findChildViewById(rootView, id);
      if (icCopy == null) {
        break missingId;
      }

      id = R.id.icSave;
      MaterialButton icSave = ViewBindings.findChildViewById(rootView, id);
      if (icSave == null) {
        break missingId;
      }

      id = R.id.icShare;
      MaterialButton icShare = ViewBindings.findChildViewById(rootView, id);
      if (icShare == null) {
        break missingId;
      }

      id = R.id.layoutBottom;
      LinearLayout layoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layoutQuote;
      RelativeLayout layoutQuote = ViewBindings.findChildViewById(rootView, id);
      if (layoutQuote == null) {
        break missingId;
      }

      LinearLayout llTop = (LinearLayout) rootView;

      return new DisplayQuoteLayoutBinding((LinearLayout) rootView, authorName, catText, icCopy,
          icSave, icShare, layoutBottom, layoutQuote, llTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
