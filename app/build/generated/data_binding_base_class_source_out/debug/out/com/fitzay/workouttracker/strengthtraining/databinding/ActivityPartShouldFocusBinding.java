// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPartShouldFocusBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final ConstraintLayout clArms;

  @NonNull
  public final ConstraintLayout clBottomNext;

  @NonNull
  public final ConstraintLayout constraintLayout17;

  @NonNull
  public final ConstraintLayout constraintLayout18;

  @NonNull
  public final ConstraintLayout constraintLayout19;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final ImageView ivArms;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivBelly;

  @NonNull
  public final ImageView ivChest;

  @NonNull
  public final ImageView ivLeg;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvArms;

  @NonNull
  public final TextView tvBelly;

  @NonNull
  public final TextView tvChest;

  @NonNull
  public final TextView tvLeg;

  @NonNull
  public final TextView tvQuestion;

  private ActivityPartShouldFocusBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnNext, @NonNull ConstraintLayout clArms,
      @NonNull ConstraintLayout clBottomNext, @NonNull ConstraintLayout constraintLayout17,
      @NonNull ConstraintLayout constraintLayout18, @NonNull ConstraintLayout constraintLayout19,
      @NonNull ImageView imageView, @NonNull ImageView imageView7, @NonNull ImageView ivArms,
      @NonNull ImageView ivBack, @NonNull ImageView ivBelly, @NonNull ImageView ivChest,
      @NonNull ImageView ivLeg, @NonNull MaterialToolbar toolbar, @NonNull TextView tvArms,
      @NonNull TextView tvBelly, @NonNull TextView tvChest, @NonNull TextView tvLeg,
      @NonNull TextView tvQuestion) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.clArms = clArms;
    this.clBottomNext = clBottomNext;
    this.constraintLayout17 = constraintLayout17;
    this.constraintLayout18 = constraintLayout18;
    this.constraintLayout19 = constraintLayout19;
    this.imageView = imageView;
    this.imageView7 = imageView7;
    this.ivArms = ivArms;
    this.ivBack = ivBack;
    this.ivBelly = ivBelly;
    this.ivChest = ivChest;
    this.ivLeg = ivLeg;
    this.toolbar = toolbar;
    this.tvArms = tvArms;
    this.tvBelly = tvBelly;
    this.tvChest = tvChest;
    this.tvLeg = tvLeg;
    this.tvQuestion = tvQuestion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPartShouldFocusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPartShouldFocusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_part_should_focus, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPartShouldFocusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      MaterialButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.clArms;
      ConstraintLayout clArms = ViewBindings.findChildViewById(rootView, id);
      if (clArms == null) {
        break missingId;
      }

      id = R.id.clBottomNext;
      ConstraintLayout clBottomNext = ViewBindings.findChildViewById(rootView, id);
      if (clBottomNext == null) {
        break missingId;
      }

      id = R.id.constraintLayout17;
      ConstraintLayout constraintLayout17 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout17 == null) {
        break missingId;
      }

      id = R.id.constraintLayout18;
      ConstraintLayout constraintLayout18 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout18 == null) {
        break missingId;
      }

      id = R.id.constraintLayout19;
      ConstraintLayout constraintLayout19 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout19 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.ivArms;
      ImageView ivArms = ViewBindings.findChildViewById(rootView, id);
      if (ivArms == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivBelly;
      ImageView ivBelly = ViewBindings.findChildViewById(rootView, id);
      if (ivBelly == null) {
        break missingId;
      }

      id = R.id.ivChest;
      ImageView ivChest = ViewBindings.findChildViewById(rootView, id);
      if (ivChest == null) {
        break missingId;
      }

      id = R.id.ivLeg;
      ImageView ivLeg = ViewBindings.findChildViewById(rootView, id);
      if (ivLeg == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvArms;
      TextView tvArms = ViewBindings.findChildViewById(rootView, id);
      if (tvArms == null) {
        break missingId;
      }

      id = R.id.tvBelly;
      TextView tvBelly = ViewBindings.findChildViewById(rootView, id);
      if (tvBelly == null) {
        break missingId;
      }

      id = R.id.tvChest;
      TextView tvChest = ViewBindings.findChildViewById(rootView, id);
      if (tvChest == null) {
        break missingId;
      }

      id = R.id.tvLeg;
      TextView tvLeg = ViewBindings.findChildViewById(rootView, id);
      if (tvLeg == null) {
        break missingId;
      }

      id = R.id.tvQuestion;
      TextView tvQuestion = ViewBindings.findChildViewById(rootView, id);
      if (tvQuestion == null) {
        break missingId;
      }

      return new ActivityPartShouldFocusBinding((ConstraintLayout) rootView, btnNext, clArms,
          clBottomNext, constraintLayout17, constraintLayout18, constraintLayout19, imageView,
          imageView7, ivArms, ivBack, ivBelly, ivChest, ivLeg, toolbar, tvArms, tvBelly, tvChest,
          tvLeg, tvQuestion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
