// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCupCapacityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout cup100;

  @NonNull
  public final LinearLayout cup200;

  @NonNull
  public final LinearLayout cup300;

  @NonNull
  public final LinearLayout cup50;

  @NonNull
  public final LinearLayout cup500;

  @NonNull
  public final LinearLayout cupAdd;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final MaterialToolbar materialToolbar;

  private ActivityCupCapacityBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout cup100,
      @NonNull LinearLayout cup200, @NonNull LinearLayout cup300, @NonNull LinearLayout cup50,
      @NonNull LinearLayout cup500, @NonNull LinearLayout cupAdd, @NonNull ImageView ivBack,
      @NonNull MaterialToolbar materialToolbar) {
    this.rootView = rootView;
    this.cup100 = cup100;
    this.cup200 = cup200;
    this.cup300 = cup300;
    this.cup50 = cup50;
    this.cup500 = cup500;
    this.cupAdd = cupAdd;
    this.ivBack = ivBack;
    this.materialToolbar = materialToolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCupCapacityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCupCapacityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cup_capacity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCupCapacityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cup100;
      LinearLayout cup100 = ViewBindings.findChildViewById(rootView, id);
      if (cup100 == null) {
        break missingId;
      }

      id = R.id.cup200;
      LinearLayout cup200 = ViewBindings.findChildViewById(rootView, id);
      if (cup200 == null) {
        break missingId;
      }

      id = R.id.cup300;
      LinearLayout cup300 = ViewBindings.findChildViewById(rootView, id);
      if (cup300 == null) {
        break missingId;
      }

      id = R.id.cup50;
      LinearLayout cup50 = ViewBindings.findChildViewById(rootView, id);
      if (cup50 == null) {
        break missingId;
      }

      id = R.id.cup500;
      LinearLayout cup500 = ViewBindings.findChildViewById(rootView, id);
      if (cup500 == null) {
        break missingId;
      }

      id = R.id.cupAdd;
      LinearLayout cupAdd = ViewBindings.findChildViewById(rootView, id);
      if (cupAdd == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      return new ActivityCupCapacityBinding((RelativeLayout) rootView, cup100, cup200, cup300,
          cup50, cup500, cupAdd, ivBack, materialToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
