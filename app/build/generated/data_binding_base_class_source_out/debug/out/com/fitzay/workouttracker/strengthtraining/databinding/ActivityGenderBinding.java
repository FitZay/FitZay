// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import aglibs.loading.skeleton.layout.SkeletonRelativeLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.google.android.ads.nativetemplates.TemplateView;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGenderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final CircularProgressIndicator circularProgressIndicator;

  @NonNull
  public final ConstraintLayout clAds;

  @NonNull
  public final ConstraintLayout clBottomNext;

  @NonNull
  public final ConstraintLayout clFemale;

  @NonNull
  public final ConstraintLayout clGenderSelection;

  @NonNull
  public final ConstraintLayout clMale;

  @NonNull
  public final AppCompatButton cta;

  @NonNull
  public final ImageView img001;

  @NonNull
  public final ImageView ivFemale;

  @NonNull
  public final ImageView ivMale;

  @NonNull
  public final RelativeLayout layoutAd;

  @NonNull
  public final LinearLayout llFemale;

  @NonNull
  public final LinearLayout llMale;

  @NonNull
  public final TemplateView plannerTemplateDown;

  @NonNull
  public final TemplateView plannerTemplateUp;

  @NonNull
  public final SkeletonRelativeLayout skeletonLayout;

  @NonNull
  public final TextView text001;

  @NonNull
  public final TextView tvFemale;

  @NonNull
  public final TextView tvMale;

  @NonNull
  public final MaterialTextView tvQuestion;

  @NonNull
  public final MaterialToolbar tvWelcome;

  @NonNull
  public final TextView txtSkip;

  private ActivityGenderBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton btnNext,
      @NonNull CircularProgressIndicator circularProgressIndicator, @NonNull ConstraintLayout clAds,
      @NonNull ConstraintLayout clBottomNext, @NonNull ConstraintLayout clFemale,
      @NonNull ConstraintLayout clGenderSelection, @NonNull ConstraintLayout clMale,
      @NonNull AppCompatButton cta, @NonNull ImageView img001, @NonNull ImageView ivFemale,
      @NonNull ImageView ivMale, @NonNull RelativeLayout layoutAd, @NonNull LinearLayout llFemale,
      @NonNull LinearLayout llMale, @NonNull TemplateView plannerTemplateDown,
      @NonNull TemplateView plannerTemplateUp, @NonNull SkeletonRelativeLayout skeletonLayout,
      @NonNull TextView text001, @NonNull TextView tvFemale, @NonNull TextView tvMale,
      @NonNull MaterialTextView tvQuestion, @NonNull MaterialToolbar tvWelcome,
      @NonNull TextView txtSkip) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.circularProgressIndicator = circularProgressIndicator;
    this.clAds = clAds;
    this.clBottomNext = clBottomNext;
    this.clFemale = clFemale;
    this.clGenderSelection = clGenderSelection;
    this.clMale = clMale;
    this.cta = cta;
    this.img001 = img001;
    this.ivFemale = ivFemale;
    this.ivMale = ivMale;
    this.layoutAd = layoutAd;
    this.llFemale = llFemale;
    this.llMale = llMale;
    this.plannerTemplateDown = plannerTemplateDown;
    this.plannerTemplateUp = plannerTemplateUp;
    this.skeletonLayout = skeletonLayout;
    this.text001 = text001;
    this.tvFemale = tvFemale;
    this.tvMale = tvMale;
    this.tvQuestion = tvQuestion;
    this.tvWelcome = tvWelcome;
    this.txtSkip = txtSkip;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_gender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      MaterialButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.circularProgressIndicator;
      CircularProgressIndicator circularProgressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (circularProgressIndicator == null) {
        break missingId;
      }

      id = R.id.clAds;
      ConstraintLayout clAds = ViewBindings.findChildViewById(rootView, id);
      if (clAds == null) {
        break missingId;
      }

      id = R.id.clBottomNext;
      ConstraintLayout clBottomNext = ViewBindings.findChildViewById(rootView, id);
      if (clBottomNext == null) {
        break missingId;
      }

      id = R.id.clFemale;
      ConstraintLayout clFemale = ViewBindings.findChildViewById(rootView, id);
      if (clFemale == null) {
        break missingId;
      }

      id = R.id.clGenderSelection;
      ConstraintLayout clGenderSelection = ViewBindings.findChildViewById(rootView, id);
      if (clGenderSelection == null) {
        break missingId;
      }

      id = R.id.clMale;
      ConstraintLayout clMale = ViewBindings.findChildViewById(rootView, id);
      if (clMale == null) {
        break missingId;
      }

      id = R.id.cta;
      AppCompatButton cta = ViewBindings.findChildViewById(rootView, id);
      if (cta == null) {
        break missingId;
      }

      id = R.id.img001;
      ImageView img001 = ViewBindings.findChildViewById(rootView, id);
      if (img001 == null) {
        break missingId;
      }

      id = R.id.ivFemale;
      ImageView ivFemale = ViewBindings.findChildViewById(rootView, id);
      if (ivFemale == null) {
        break missingId;
      }

      id = R.id.ivMale;
      ImageView ivMale = ViewBindings.findChildViewById(rootView, id);
      if (ivMale == null) {
        break missingId;
      }

      id = R.id.layoutAd;
      RelativeLayout layoutAd = ViewBindings.findChildViewById(rootView, id);
      if (layoutAd == null) {
        break missingId;
      }

      id = R.id.llFemale;
      LinearLayout llFemale = ViewBindings.findChildViewById(rootView, id);
      if (llFemale == null) {
        break missingId;
      }

      id = R.id.llMale;
      LinearLayout llMale = ViewBindings.findChildViewById(rootView, id);
      if (llMale == null) {
        break missingId;
      }

      id = R.id.plannerTemplateDown;
      TemplateView plannerTemplateDown = ViewBindings.findChildViewById(rootView, id);
      if (plannerTemplateDown == null) {
        break missingId;
      }

      id = R.id.plannerTemplateUp;
      TemplateView plannerTemplateUp = ViewBindings.findChildViewById(rootView, id);
      if (plannerTemplateUp == null) {
        break missingId;
      }

      id = R.id.skeletonLayout;
      SkeletonRelativeLayout skeletonLayout = ViewBindings.findChildViewById(rootView, id);
      if (skeletonLayout == null) {
        break missingId;
      }

      id = R.id.text001;
      TextView text001 = ViewBindings.findChildViewById(rootView, id);
      if (text001 == null) {
        break missingId;
      }

      id = R.id.tvFemale;
      TextView tvFemale = ViewBindings.findChildViewById(rootView, id);
      if (tvFemale == null) {
        break missingId;
      }

      id = R.id.tvMale;
      TextView tvMale = ViewBindings.findChildViewById(rootView, id);
      if (tvMale == null) {
        break missingId;
      }

      id = R.id.tvQuestion;
      MaterialTextView tvQuestion = ViewBindings.findChildViewById(rootView, id);
      if (tvQuestion == null) {
        break missingId;
      }

      id = R.id.tvWelcome;
      MaterialToolbar tvWelcome = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcome == null) {
        break missingId;
      }

      id = R.id.txtSkip;
      TextView txtSkip = ViewBindings.findChildViewById(rootView, id);
      if (txtSkip == null) {
        break missingId;
      }

      return new ActivityGenderBinding((ConstraintLayout) rootView, btnNext,
          circularProgressIndicator, clAds, clBottomNext, clFemale, clGenderSelection, clMale, cta,
          img001, ivFemale, ivMale, layoutAd, llFemale, llMale, plannerTemplateDown,
          plannerTemplateUp, skeletonLayout, text001, tvFemale, tvMale, tvQuestion, tvWelcome,
          txtSkip);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
