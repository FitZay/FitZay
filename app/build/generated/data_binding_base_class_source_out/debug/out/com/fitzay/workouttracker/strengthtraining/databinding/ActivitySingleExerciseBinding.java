// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySingleExerciseBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View btnNext;

  @NonNull
  public final RelativeLayout cardFinish;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView exImage;

  @NonNull
  public final TextView exName;

  @NonNull
  public final TextView exNameTwo;

  @NonNull
  public final TextView exTime;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final RelativeLayout layoutExercise;

  @NonNull
  public final LinearLayout layoutReady;

  @NonNull
  public final MaterialToolbar materialToolbar;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final MaterialTextView tvSleepEnough;

  @NonNull
  public final TextView txtProgress;

  @NonNull
  public final TextView txtReadyToGo;

  @NonNull
  public final TextView txtToolbar;

  @NonNull
  public final ImageView v;

  private ActivitySingleExerciseBinding(@NonNull RelativeLayout rootView, @NonNull View btnNext,
      @NonNull RelativeLayout cardFinish, @NonNull TextView description, @NonNull ImageView exImage,
      @NonNull TextView exName, @NonNull TextView exNameTwo, @NonNull TextView exTime,
      @NonNull ImageView ivBack, @NonNull RelativeLayout layoutExercise,
      @NonNull LinearLayout layoutReady, @NonNull MaterialToolbar materialToolbar,
      @NonNull LinearProgressIndicator progressBar, @NonNull MaterialTextView tvSleepEnough,
      @NonNull TextView txtProgress, @NonNull TextView txtReadyToGo, @NonNull TextView txtToolbar,
      @NonNull ImageView v) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.cardFinish = cardFinish;
    this.description = description;
    this.exImage = exImage;
    this.exName = exName;
    this.exNameTwo = exNameTwo;
    this.exTime = exTime;
    this.ivBack = ivBack;
    this.layoutExercise = layoutExercise;
    this.layoutReady = layoutReady;
    this.materialToolbar = materialToolbar;
    this.progressBar = progressBar;
    this.tvSleepEnough = tvSleepEnough;
    this.txtProgress = txtProgress;
    this.txtReadyToGo = txtReadyToGo;
    this.txtToolbar = txtToolbar;
    this.v = v;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySingleExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySingleExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_single_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySingleExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      View btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.cardFinish;
      RelativeLayout cardFinish = ViewBindings.findChildViewById(rootView, id);
      if (cardFinish == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.exImage;
      ImageView exImage = ViewBindings.findChildViewById(rootView, id);
      if (exImage == null) {
        break missingId;
      }

      id = R.id.exName;
      TextView exName = ViewBindings.findChildViewById(rootView, id);
      if (exName == null) {
        break missingId;
      }

      id = R.id.exNameTwo;
      TextView exNameTwo = ViewBindings.findChildViewById(rootView, id);
      if (exNameTwo == null) {
        break missingId;
      }

      id = R.id.exTime;
      TextView exTime = ViewBindings.findChildViewById(rootView, id);
      if (exTime == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.layoutExercise;
      RelativeLayout layoutExercise = ViewBindings.findChildViewById(rootView, id);
      if (layoutExercise == null) {
        break missingId;
      }

      id = R.id.layoutReady;
      LinearLayout layoutReady = ViewBindings.findChildViewById(rootView, id);
      if (layoutReady == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tvSleepEnough;
      MaterialTextView tvSleepEnough = ViewBindings.findChildViewById(rootView, id);
      if (tvSleepEnough == null) {
        break missingId;
      }

      id = R.id.txtProgress;
      TextView txtProgress = ViewBindings.findChildViewById(rootView, id);
      if (txtProgress == null) {
        break missingId;
      }

      id = R.id.txtReadyToGo;
      TextView txtReadyToGo = ViewBindings.findChildViewById(rootView, id);
      if (txtReadyToGo == null) {
        break missingId;
      }

      id = R.id.txtToolbar;
      TextView txtToolbar = ViewBindings.findChildViewById(rootView, id);
      if (txtToolbar == null) {
        break missingId;
      }

      id = R.id.v;
      ImageView v = ViewBindings.findChildViewById(rootView, id);
      if (v == null) {
        break missingId;
      }

      return new ActivitySingleExerciseBinding((RelativeLayout) rootView, btnNext, cardFinish,
          description, exImage, exName, exNameTwo, exTime, ivBack, layoutExercise, layoutReady,
          materialToolbar, progressBar, tvSleepEnough, txtProgress, txtReadyToGo, txtToolbar, v);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
