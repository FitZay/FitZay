// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SelectorDialogBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final ImageView ivSelectCamera;

  @NonNull
  public final ImageView ivSelectGallery;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  private SelectorDialogBinding(@NonNull CardView rootView, @NonNull ImageView ivClose,
      @NonNull ImageView ivSelectCamera, @NonNull ImageView ivSelectGallery,
      @NonNull TextView textView4, @NonNull TextView textView5) {
    this.rootView = rootView;
    this.ivClose = ivClose;
    this.ivSelectCamera = ivSelectCamera;
    this.ivSelectGallery = ivSelectGallery;
    this.textView4 = textView4;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectorDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectorDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.selector_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectorDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_close;
      ImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.iv_select_camera;
      ImageView ivSelectCamera = ViewBindings.findChildViewById(rootView, id);
      if (ivSelectCamera == null) {
        break missingId;
      }

      id = R.id.iv_select_gallery;
      ImageView ivSelectGallery = ViewBindings.findChildViewById(rootView, id);
      if (ivSelectGallery == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new SelectorDialogBinding((CardView) rootView, ivClose, ivSelectCamera,
          ivSelectGallery, textView4, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
