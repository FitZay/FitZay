// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStepDailyBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LineChart chart;

  @NonNull
  public final ImageView imgCalories;

  @NonNull
  public final ImageView imgLocation;

  @NonNull
  public final ImageView imgStep;

  @NonNull
  public final ImageView imgTime;

  @NonNull
  public final LinearLayout layoutCharts;

  @NonNull
  public final RelativeLayout layoutToday;

  @NonNull
  public final CircularProgressIndicator stepProgress;

  @NonNull
  public final TextView typeName;

  @NonNull
  public final TextView userGoal;

  @NonNull
  public final TextView userSteps;

  private FragmentStepDailyBinding(@NonNull RelativeLayout rootView, @NonNull LineChart chart,
      @NonNull ImageView imgCalories, @NonNull ImageView imgLocation, @NonNull ImageView imgStep,
      @NonNull ImageView imgTime, @NonNull LinearLayout layoutCharts,
      @NonNull RelativeLayout layoutToday, @NonNull CircularProgressIndicator stepProgress,
      @NonNull TextView typeName, @NonNull TextView userGoal, @NonNull TextView userSteps) {
    this.rootView = rootView;
    this.chart = chart;
    this.imgCalories = imgCalories;
    this.imgLocation = imgLocation;
    this.imgStep = imgStep;
    this.imgTime = imgTime;
    this.layoutCharts = layoutCharts;
    this.layoutToday = layoutToday;
    this.stepProgress = stepProgress;
    this.typeName = typeName;
    this.userGoal = userGoal;
    this.userSteps = userSteps;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStepDailyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStepDailyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_step_daily, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStepDailyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chart;
      LineChart chart = ViewBindings.findChildViewById(rootView, id);
      if (chart == null) {
        break missingId;
      }

      id = R.id.imgCalories;
      ImageView imgCalories = ViewBindings.findChildViewById(rootView, id);
      if (imgCalories == null) {
        break missingId;
      }

      id = R.id.imgLocation;
      ImageView imgLocation = ViewBindings.findChildViewById(rootView, id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.imgStep;
      ImageView imgStep = ViewBindings.findChildViewById(rootView, id);
      if (imgStep == null) {
        break missingId;
      }

      id = R.id.imgTime;
      ImageView imgTime = ViewBindings.findChildViewById(rootView, id);
      if (imgTime == null) {
        break missingId;
      }

      id = R.id.layoutCharts;
      LinearLayout layoutCharts = ViewBindings.findChildViewById(rootView, id);
      if (layoutCharts == null) {
        break missingId;
      }

      id = R.id.layoutToday;
      RelativeLayout layoutToday = ViewBindings.findChildViewById(rootView, id);
      if (layoutToday == null) {
        break missingId;
      }

      id = R.id.stepProgress;
      CircularProgressIndicator stepProgress = ViewBindings.findChildViewById(rootView, id);
      if (stepProgress == null) {
        break missingId;
      }

      id = R.id.typeName;
      TextView typeName = ViewBindings.findChildViewById(rootView, id);
      if (typeName == null) {
        break missingId;
      }

      id = R.id.userGoal;
      TextView userGoal = ViewBindings.findChildViewById(rootView, id);
      if (userGoal == null) {
        break missingId;
      }

      id = R.id.userSteps;
      TextView userSteps = ViewBindings.findChildViewById(rootView, id);
      if (userSteps == null) {
        break missingId;
      }

      return new FragmentStepDailyBinding((RelativeLayout) rootView, chart, imgCalories,
          imgLocation, imgStep, imgTime, layoutCharts, layoutToday, stepProgress, typeName,
          userGoal, userSteps);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
