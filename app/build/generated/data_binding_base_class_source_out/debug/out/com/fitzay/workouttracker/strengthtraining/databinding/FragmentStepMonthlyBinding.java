// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.github.mikephil.charting.charts.BarChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStepMonthlyBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout dateLayout;

  @NonNull
  public final ImageView imgCalories;

  @NonNull
  public final ImageView imgDot;

  @NonNull
  public final ImageView imgLocation;

  @NonNull
  public final ImageView imgStep;

  @NonNull
  public final ImageView imgTime;

  @NonNull
  public final LinearLayout layoutCharts;

  @NonNull
  public final View nextDate;

  @NonNull
  public final View previousDate;

  @NonNull
  public final BarChart sleepChartMonthly;

  @NonNull
  public final TextView txtAverage;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtMiles;

  private FragmentStepMonthlyBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout dateLayout, @NonNull ImageView imgCalories, @NonNull ImageView imgDot,
      @NonNull ImageView imgLocation, @NonNull ImageView imgStep, @NonNull ImageView imgTime,
      @NonNull LinearLayout layoutCharts, @NonNull View nextDate, @NonNull View previousDate,
      @NonNull BarChart sleepChartMonthly, @NonNull TextView txtAverage, @NonNull TextView txtDate,
      @NonNull TextView txtMiles) {
    this.rootView = rootView;
    this.dateLayout = dateLayout;
    this.imgCalories = imgCalories;
    this.imgDot = imgDot;
    this.imgLocation = imgLocation;
    this.imgStep = imgStep;
    this.imgTime = imgTime;
    this.layoutCharts = layoutCharts;
    this.nextDate = nextDate;
    this.previousDate = previousDate;
    this.sleepChartMonthly = sleepChartMonthly;
    this.txtAverage = txtAverage;
    this.txtDate = txtDate;
    this.txtMiles = txtMiles;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStepMonthlyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStepMonthlyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_step_monthly, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStepMonthlyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateLayout;
      LinearLayout dateLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateLayout == null) {
        break missingId;
      }

      id = R.id.imgCalories;
      ImageView imgCalories = ViewBindings.findChildViewById(rootView, id);
      if (imgCalories == null) {
        break missingId;
      }

      id = R.id.imgDot;
      ImageView imgDot = ViewBindings.findChildViewById(rootView, id);
      if (imgDot == null) {
        break missingId;
      }

      id = R.id.imgLocation;
      ImageView imgLocation = ViewBindings.findChildViewById(rootView, id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.imgStep;
      ImageView imgStep = ViewBindings.findChildViewById(rootView, id);
      if (imgStep == null) {
        break missingId;
      }

      id = R.id.imgTime;
      ImageView imgTime = ViewBindings.findChildViewById(rootView, id);
      if (imgTime == null) {
        break missingId;
      }

      id = R.id.layoutCharts;
      LinearLayout layoutCharts = ViewBindings.findChildViewById(rootView, id);
      if (layoutCharts == null) {
        break missingId;
      }

      id = R.id.nextDate;
      View nextDate = ViewBindings.findChildViewById(rootView, id);
      if (nextDate == null) {
        break missingId;
      }

      id = R.id.previousDate;
      View previousDate = ViewBindings.findChildViewById(rootView, id);
      if (previousDate == null) {
        break missingId;
      }

      id = R.id.sleepChartMonthly;
      BarChart sleepChartMonthly = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartMonthly == null) {
        break missingId;
      }

      id = R.id.txtAverage;
      TextView txtAverage = ViewBindings.findChildViewById(rootView, id);
      if (txtAverage == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtMiles;
      TextView txtMiles = ViewBindings.findChildViewById(rootView, id);
      if (txtMiles == null) {
        break missingId;
      }

      return new FragmentStepMonthlyBinding((RelativeLayout) rootView, dateLayout, imgCalories,
          imgDot, imgLocation, imgStep, imgTime, layoutCharts, nextDate, previousDate,
          sleepChartMonthly, txtAverage, txtDate, txtMiles);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
