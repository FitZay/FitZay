// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.google.android.ads.nativetemplates.TemplateView;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.joery.timerangepicker.TimeRangePicker;

public final class ActivitySleepTrackerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView alarmIc;

  @NonNull
  public final SwitchCompat alarmOnOffSwitch;

  @NonNull
  public final TemplateView bannerTypeTempalte;

  @NonNull
  public final ConstraintLayout clAds;

  @NonNull
  public final RelativeLayout daysLayout;

  @NonNull
  public final ImageView imgAlarm;

  @NonNull
  public final ImageView imgAlarm2;

  @NonNull
  public final ImageView imgAlarm22;

  @NonNull
  public final ImageView imgMoon;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivSave;

  @NonNull
  public final ConstraintLayout l;

  @NonNull
  public final ImageView label;

  @NonNull
  public final ImageView label2;

  @NonNull
  public final RelativeLayout layoutAd;

  @NonNull
  public final LinearLayout layoutAlarm;

  @NonNull
  public final LinearLayout layoutAlarmSound;

  @NonNull
  public final LinearLayout layoutAlarmSound2;

  @NonNull
  public final LinearLayout layoutBed;

  @NonNull
  public final LinearLayout layoutLabel;

  @NonNull
  public final LinearLayout layoutLabel2;

  @NonNull
  public final LinearLayout layoutSnooze;

  @NonNull
  public final LinearLayout layoutSnooze2;

  @NonNull
  public final ConstraintLayout ll;

  @NonNull
  public final MaterialToolbar materialToolbar;

  @NonNull
  public final TimeRangePicker picker;

  @NonNull
  public final ConstraintLayout s;

  @NonNull
  public final CheckBox selectAllDay;

  @NonNull
  public final TextView selectDay;

  @NonNull
  public final ConstraintLayout sn;

  @NonNull
  public final ConstraintLayout sn2;

  @NonNull
  public final ImageView snooze;

  @NonNull
  public final ImageView snooze2;

  @NonNull
  public final ConstraintLayout ss;

  @NonNull
  public final SwitchCompat swOnOff;

  @NonNull
  public final SwitchCompat swOnOff2;

  @NonNull
  public final MaterialTextView tvBedTime;

  @NonNull
  public final MaterialTextView tvLabel;

  @NonNull
  public final MaterialTextView tvLabel2;

  @NonNull
  public final MaterialTextView tvSnooze;

  @NonNull
  public final MaterialTextView tvSnooze2;

  @NonNull
  public final MaterialTextView tvSound;

  @NonNull
  public final MaterialTextView tvSound2;

  @NonNull
  public final MaterialTextView tvWakeTime;

  @NonNull
  public final TextView txtFriday;

  @NonNull
  public final TextView txtMonday;

  @NonNull
  public final TextView txtSaturday;

  @NonNull
  public final MaterialTextView txtSchedule;

  @NonNull
  public final TextView txtSunday;

  @NonNull
  public final TextView txtThursday;

  @NonNull
  public final TextView txtToolbar;

  @NonNull
  public final TextView txtTuesday;

  @NonNull
  public final MaterialTextView txtTwelve;

  @NonNull
  public final TextView txtWednesday;

  @NonNull
  public final ConstraintLayout vb;

  @NonNull
  public final ConstraintLayout vb2;

  @NonNull
  public final ImageView vibration;

  @NonNull
  public final ImageView vibration2;

  private ActivitySleepTrackerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView alarmIc, @NonNull SwitchCompat alarmOnOffSwitch,
      @NonNull TemplateView bannerTypeTempalte, @NonNull ConstraintLayout clAds,
      @NonNull RelativeLayout daysLayout, @NonNull ImageView imgAlarm, @NonNull ImageView imgAlarm2,
      @NonNull ImageView imgAlarm22, @NonNull ImageView imgMoon, @NonNull ImageView ivBack,
      @NonNull ImageView ivSave, @NonNull ConstraintLayout l, @NonNull ImageView label,
      @NonNull ImageView label2, @NonNull RelativeLayout layoutAd,
      @NonNull LinearLayout layoutAlarm, @NonNull LinearLayout layoutAlarmSound,
      @NonNull LinearLayout layoutAlarmSound2, @NonNull LinearLayout layoutBed,
      @NonNull LinearLayout layoutLabel, @NonNull LinearLayout layoutLabel2,
      @NonNull LinearLayout layoutSnooze, @NonNull LinearLayout layoutSnooze2,
      @NonNull ConstraintLayout ll, @NonNull MaterialToolbar materialToolbar,
      @NonNull TimeRangePicker picker, @NonNull ConstraintLayout s, @NonNull CheckBox selectAllDay,
      @NonNull TextView selectDay, @NonNull ConstraintLayout sn, @NonNull ConstraintLayout sn2,
      @NonNull ImageView snooze, @NonNull ImageView snooze2, @NonNull ConstraintLayout ss,
      @NonNull SwitchCompat swOnOff, @NonNull SwitchCompat swOnOff2,
      @NonNull MaterialTextView tvBedTime, @NonNull MaterialTextView tvLabel,
      @NonNull MaterialTextView tvLabel2, @NonNull MaterialTextView tvSnooze,
      @NonNull MaterialTextView tvSnooze2, @NonNull MaterialTextView tvSound,
      @NonNull MaterialTextView tvSound2, @NonNull MaterialTextView tvWakeTime,
      @NonNull TextView txtFriday, @NonNull TextView txtMonday, @NonNull TextView txtSaturday,
      @NonNull MaterialTextView txtSchedule, @NonNull TextView txtSunday,
      @NonNull TextView txtThursday, @NonNull TextView txtToolbar, @NonNull TextView txtTuesday,
      @NonNull MaterialTextView txtTwelve, @NonNull TextView txtWednesday,
      @NonNull ConstraintLayout vb, @NonNull ConstraintLayout vb2, @NonNull ImageView vibration,
      @NonNull ImageView vibration2) {
    this.rootView = rootView;
    this.alarmIc = alarmIc;
    this.alarmOnOffSwitch = alarmOnOffSwitch;
    this.bannerTypeTempalte = bannerTypeTempalte;
    this.clAds = clAds;
    this.daysLayout = daysLayout;
    this.imgAlarm = imgAlarm;
    this.imgAlarm2 = imgAlarm2;
    this.imgAlarm22 = imgAlarm22;
    this.imgMoon = imgMoon;
    this.ivBack = ivBack;
    this.ivSave = ivSave;
    this.l = l;
    this.label = label;
    this.label2 = label2;
    this.layoutAd = layoutAd;
    this.layoutAlarm = layoutAlarm;
    this.layoutAlarmSound = layoutAlarmSound;
    this.layoutAlarmSound2 = layoutAlarmSound2;
    this.layoutBed = layoutBed;
    this.layoutLabel = layoutLabel;
    this.layoutLabel2 = layoutLabel2;
    this.layoutSnooze = layoutSnooze;
    this.layoutSnooze2 = layoutSnooze2;
    this.ll = ll;
    this.materialToolbar = materialToolbar;
    this.picker = picker;
    this.s = s;
    this.selectAllDay = selectAllDay;
    this.selectDay = selectDay;
    this.sn = sn;
    this.sn2 = sn2;
    this.snooze = snooze;
    this.snooze2 = snooze2;
    this.ss = ss;
    this.swOnOff = swOnOff;
    this.swOnOff2 = swOnOff2;
    this.tvBedTime = tvBedTime;
    this.tvLabel = tvLabel;
    this.tvLabel2 = tvLabel2;
    this.tvSnooze = tvSnooze;
    this.tvSnooze2 = tvSnooze2;
    this.tvSound = tvSound;
    this.tvSound2 = tvSound2;
    this.tvWakeTime = tvWakeTime;
    this.txtFriday = txtFriday;
    this.txtMonday = txtMonday;
    this.txtSaturday = txtSaturday;
    this.txtSchedule = txtSchedule;
    this.txtSunday = txtSunday;
    this.txtThursday = txtThursday;
    this.txtToolbar = txtToolbar;
    this.txtTuesday = txtTuesday;
    this.txtTwelve = txtTwelve;
    this.txtWednesday = txtWednesday;
    this.vb = vb;
    this.vb2 = vb2;
    this.vibration = vibration;
    this.vibration2 = vibration2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySleepTrackerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySleepTrackerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sleep_tracker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySleepTrackerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alarmIc;
      ImageView alarmIc = ViewBindings.findChildViewById(rootView, id);
      if (alarmIc == null) {
        break missingId;
      }

      id = R.id.alarmOnOffSwitch;
      SwitchCompat alarmOnOffSwitch = ViewBindings.findChildViewById(rootView, id);
      if (alarmOnOffSwitch == null) {
        break missingId;
      }

      id = R.id.bannerTypeTempalte;
      TemplateView bannerTypeTempalte = ViewBindings.findChildViewById(rootView, id);
      if (bannerTypeTempalte == null) {
        break missingId;
      }

      id = R.id.clAds;
      ConstraintLayout clAds = ViewBindings.findChildViewById(rootView, id);
      if (clAds == null) {
        break missingId;
      }

      id = R.id.daysLayout;
      RelativeLayout daysLayout = ViewBindings.findChildViewById(rootView, id);
      if (daysLayout == null) {
        break missingId;
      }

      id = R.id.imgAlarm;
      ImageView imgAlarm = ViewBindings.findChildViewById(rootView, id);
      if (imgAlarm == null) {
        break missingId;
      }

      id = R.id.imgAlarm2;
      ImageView imgAlarm2 = ViewBindings.findChildViewById(rootView, id);
      if (imgAlarm2 == null) {
        break missingId;
      }

      id = R.id.imgAlarm22;
      ImageView imgAlarm22 = ViewBindings.findChildViewById(rootView, id);
      if (imgAlarm22 == null) {
        break missingId;
      }

      id = R.id.imgMoon;
      ImageView imgMoon = ViewBindings.findChildViewById(rootView, id);
      if (imgMoon == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivSave;
      ImageView ivSave = ViewBindings.findChildViewById(rootView, id);
      if (ivSave == null) {
        break missingId;
      }

      id = R.id.l;
      ConstraintLayout l = ViewBindings.findChildViewById(rootView, id);
      if (l == null) {
        break missingId;
      }

      id = R.id.label;
      ImageView label = ViewBindings.findChildViewById(rootView, id);
      if (label == null) {
        break missingId;
      }

      id = R.id.label2;
      ImageView label2 = ViewBindings.findChildViewById(rootView, id);
      if (label2 == null) {
        break missingId;
      }

      id = R.id.layoutAd;
      RelativeLayout layoutAd = ViewBindings.findChildViewById(rootView, id);
      if (layoutAd == null) {
        break missingId;
      }

      id = R.id.layoutAlarm;
      LinearLayout layoutAlarm = ViewBindings.findChildViewById(rootView, id);
      if (layoutAlarm == null) {
        break missingId;
      }

      id = R.id.layoutAlarmSound;
      LinearLayout layoutAlarmSound = ViewBindings.findChildViewById(rootView, id);
      if (layoutAlarmSound == null) {
        break missingId;
      }

      id = R.id.layoutAlarmSound2;
      LinearLayout layoutAlarmSound2 = ViewBindings.findChildViewById(rootView, id);
      if (layoutAlarmSound2 == null) {
        break missingId;
      }

      id = R.id.layoutBed;
      LinearLayout layoutBed = ViewBindings.findChildViewById(rootView, id);
      if (layoutBed == null) {
        break missingId;
      }

      id = R.id.layoutLabel;
      LinearLayout layoutLabel = ViewBindings.findChildViewById(rootView, id);
      if (layoutLabel == null) {
        break missingId;
      }

      id = R.id.layoutLabel2;
      LinearLayout layoutLabel2 = ViewBindings.findChildViewById(rootView, id);
      if (layoutLabel2 == null) {
        break missingId;
      }

      id = R.id.layoutSnooze;
      LinearLayout layoutSnooze = ViewBindings.findChildViewById(rootView, id);
      if (layoutSnooze == null) {
        break missingId;
      }

      id = R.id.layoutSnooze2;
      LinearLayout layoutSnooze2 = ViewBindings.findChildViewById(rootView, id);
      if (layoutSnooze2 == null) {
        break missingId;
      }

      id = R.id.ll;
      ConstraintLayout ll = ViewBindings.findChildViewById(rootView, id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      id = R.id.picker;
      TimeRangePicker picker = ViewBindings.findChildViewById(rootView, id);
      if (picker == null) {
        break missingId;
      }

      id = R.id.s;
      ConstraintLayout s = ViewBindings.findChildViewById(rootView, id);
      if (s == null) {
        break missingId;
      }

      id = R.id.selectAllDay;
      CheckBox selectAllDay = ViewBindings.findChildViewById(rootView, id);
      if (selectAllDay == null) {
        break missingId;
      }

      id = R.id.selectDay;
      TextView selectDay = ViewBindings.findChildViewById(rootView, id);
      if (selectDay == null) {
        break missingId;
      }

      id = R.id.sn;
      ConstraintLayout sn = ViewBindings.findChildViewById(rootView, id);
      if (sn == null) {
        break missingId;
      }

      id = R.id.sn2;
      ConstraintLayout sn2 = ViewBindings.findChildViewById(rootView, id);
      if (sn2 == null) {
        break missingId;
      }

      id = R.id.snooze;
      ImageView snooze = ViewBindings.findChildViewById(rootView, id);
      if (snooze == null) {
        break missingId;
      }

      id = R.id.snooze2;
      ImageView snooze2 = ViewBindings.findChildViewById(rootView, id);
      if (snooze2 == null) {
        break missingId;
      }

      id = R.id.ss;
      ConstraintLayout ss = ViewBindings.findChildViewById(rootView, id);
      if (ss == null) {
        break missingId;
      }

      id = R.id.swOnOff;
      SwitchCompat swOnOff = ViewBindings.findChildViewById(rootView, id);
      if (swOnOff == null) {
        break missingId;
      }

      id = R.id.swOnOff2;
      SwitchCompat swOnOff2 = ViewBindings.findChildViewById(rootView, id);
      if (swOnOff2 == null) {
        break missingId;
      }

      id = R.id.tvBedTime;
      MaterialTextView tvBedTime = ViewBindings.findChildViewById(rootView, id);
      if (tvBedTime == null) {
        break missingId;
      }

      id = R.id.tvLabel;
      MaterialTextView tvLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvLabel == null) {
        break missingId;
      }

      id = R.id.tvLabel2;
      MaterialTextView tvLabel2 = ViewBindings.findChildViewById(rootView, id);
      if (tvLabel2 == null) {
        break missingId;
      }

      id = R.id.tvSnooze;
      MaterialTextView tvSnooze = ViewBindings.findChildViewById(rootView, id);
      if (tvSnooze == null) {
        break missingId;
      }

      id = R.id.tvSnooze2;
      MaterialTextView tvSnooze2 = ViewBindings.findChildViewById(rootView, id);
      if (tvSnooze2 == null) {
        break missingId;
      }

      id = R.id.tvSound;
      MaterialTextView tvSound = ViewBindings.findChildViewById(rootView, id);
      if (tvSound == null) {
        break missingId;
      }

      id = R.id.tvSound2;
      MaterialTextView tvSound2 = ViewBindings.findChildViewById(rootView, id);
      if (tvSound2 == null) {
        break missingId;
      }

      id = R.id.tvWakeTime;
      MaterialTextView tvWakeTime = ViewBindings.findChildViewById(rootView, id);
      if (tvWakeTime == null) {
        break missingId;
      }

      id = R.id.txtFriday;
      TextView txtFriday = ViewBindings.findChildViewById(rootView, id);
      if (txtFriday == null) {
        break missingId;
      }

      id = R.id.txtMonday;
      TextView txtMonday = ViewBindings.findChildViewById(rootView, id);
      if (txtMonday == null) {
        break missingId;
      }

      id = R.id.txtSaturday;
      TextView txtSaturday = ViewBindings.findChildViewById(rootView, id);
      if (txtSaturday == null) {
        break missingId;
      }

      id = R.id.txtSchedule;
      MaterialTextView txtSchedule = ViewBindings.findChildViewById(rootView, id);
      if (txtSchedule == null) {
        break missingId;
      }

      id = R.id.txtSunday;
      TextView txtSunday = ViewBindings.findChildViewById(rootView, id);
      if (txtSunday == null) {
        break missingId;
      }

      id = R.id.txtThursday;
      TextView txtThursday = ViewBindings.findChildViewById(rootView, id);
      if (txtThursday == null) {
        break missingId;
      }

      id = R.id.txtToolbar;
      TextView txtToolbar = ViewBindings.findChildViewById(rootView, id);
      if (txtToolbar == null) {
        break missingId;
      }

      id = R.id.txtTuesday;
      TextView txtTuesday = ViewBindings.findChildViewById(rootView, id);
      if (txtTuesday == null) {
        break missingId;
      }

      id = R.id.txtTwelve;
      MaterialTextView txtTwelve = ViewBindings.findChildViewById(rootView, id);
      if (txtTwelve == null) {
        break missingId;
      }

      id = R.id.txtWednesday;
      TextView txtWednesday = ViewBindings.findChildViewById(rootView, id);
      if (txtWednesday == null) {
        break missingId;
      }

      id = R.id.vb;
      ConstraintLayout vb = ViewBindings.findChildViewById(rootView, id);
      if (vb == null) {
        break missingId;
      }

      id = R.id.vb2;
      ConstraintLayout vb2 = ViewBindings.findChildViewById(rootView, id);
      if (vb2 == null) {
        break missingId;
      }

      id = R.id.vibration;
      ImageView vibration = ViewBindings.findChildViewById(rootView, id);
      if (vibration == null) {
        break missingId;
      }

      id = R.id.vibration2;
      ImageView vibration2 = ViewBindings.findChildViewById(rootView, id);
      if (vibration2 == null) {
        break missingId;
      }

      return new ActivitySleepTrackerBinding((ConstraintLayout) rootView, alarmIc, alarmOnOffSwitch,
          bannerTypeTempalte, clAds, daysLayout, imgAlarm, imgAlarm2, imgAlarm22, imgMoon, ivBack,
          ivSave, l, label, label2, layoutAd, layoutAlarm, layoutAlarmSound, layoutAlarmSound2,
          layoutBed, layoutLabel, layoutLabel2, layoutSnooze, layoutSnooze2, ll, materialToolbar,
          picker, s, selectAllDay, selectDay, sn, sn2, snooze, snooze2, ss, swOnOff, swOnOff2,
          tvBedTime, tvLabel, tvLabel2, tvSnooze, tvSnooze2, tvSound, tvSound2, tvWakeTime,
          txtFriday, txtMonday, txtSaturday, txtSchedule, txtSunday, txtThursday, txtToolbar,
          txtTuesday, txtTwelve, txtWednesday, vb, vb2, vibration, vibration2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
