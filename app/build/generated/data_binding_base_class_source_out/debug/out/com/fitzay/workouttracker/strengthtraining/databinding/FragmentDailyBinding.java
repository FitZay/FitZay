// Generated by view binder compiler. Do not edit!
package com.fitzay.workouttracker.strengthtraining.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fitzay.workouttracker.strengthtraining.R;
import com.github.mikephil.charting.charts.BarChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDailyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout dateLayout;

  @NonNull
  public final ImageView imgDot;

  @NonNull
  public final BarChart sleepChart;

  @NonNull
  public final TextView txtAverage;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtMiles;

  private FragmentDailyBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout dateLayout,
      @NonNull ImageView imgDot, @NonNull BarChart sleepChart, @NonNull TextView txtAverage,
      @NonNull TextView txtDate, @NonNull TextView txtMiles) {
    this.rootView = rootView;
    this.dateLayout = dateLayout;
    this.imgDot = imgDot;
    this.sleepChart = sleepChart;
    this.txtAverage = txtAverage;
    this.txtDate = txtDate;
    this.txtMiles = txtMiles;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDailyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDailyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_daily, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDailyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateLayout;
      LinearLayout dateLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateLayout == null) {
        break missingId;
      }

      id = R.id.imgDot;
      ImageView imgDot = ViewBindings.findChildViewById(rootView, id);
      if (imgDot == null) {
        break missingId;
      }

      id = R.id.sleepChart;
      BarChart sleepChart = ViewBindings.findChildViewById(rootView, id);
      if (sleepChart == null) {
        break missingId;
      }

      id = R.id.txtAverage;
      TextView txtAverage = ViewBindings.findChildViewById(rootView, id);
      if (txtAverage == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtMiles;
      TextView txtMiles = ViewBindings.findChildViewById(rootView, id);
      if (txtMiles == null) {
        break missingId;
      }

      return new FragmentDailyBinding((ConstraintLayout) rootView, dateLayout, imgDot, sleepChart,
          txtAverage, txtDate, txtMiles);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
